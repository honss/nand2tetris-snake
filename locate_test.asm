//(@21*32)+16384
@15
M=0

@16
M=0

@17
M=0

@21
D=M

(YLOOP)
@17
D=M    //adds @21 to @17
@21
D=D+M
@17
M=D


@16
M=M+1 //increments @16

D=M //if D is not 32, go to beginning
@32
D=D-A
@YLOOP
D;JNE

@17
D=M
@16384
D=A+D
@17
M=D //storing y value 16384+y in @17








// // x-coord/16 + above


@16 //line 27
M=0

@20
D=M

(XLOOP)

@16
D=D-A
@ENDXLOOP
D;JLT

@15
M=M+1

@XLOOP
0;JMP

(ENDXLOOP)
@16
M=D //REMAINDER IN @16

@15
D=M
@17
M=D+M //17 is value of screen dbyte, 16384+y*32+x-coord


A=D

//M=1 WHATEVER THE FUCK IT IS
//REMAINDER STORED IN @16
@16
D=M
D=D+A //D is remainder, adjusted back +16

//-16 is 1000, -15 is 0100, -1 is 0000000000000001

D=D-1
@REMAINDER1
D;JEQ
D=D-1
@REMAINDER2
D;JEQ
D=D-1
@REMAINDER3
D;JEQ
D=D-1
@REMAINDER4
D;JEQ
D=D-1
@REMAINDER5
D;JEQ
D=D-1
@REMAINDER6
D;JEQ
D=D-1
@REMAINDER7
D;JEQ
D=D-1
@REMAINDER8
D;JEQ
D=D-1
@REMAINDER9
D;JEQ
D=D-1
@REMAINDER10
D;JEQ
D=D-1
@REMAINDER11
D;JEQ
D=D-1
@REMAINDER12
D;JEQ
D=D-1
@REMAINDER13
D;JEQ
D=D-1
@REMAINDER14
D;JEQ
D=D-1
@REMAINDER15
D;JEQ
D=D-1
@REMAINDER16
D;JEQ



(REMAINDER1)
@1
D=A
@17
A=M
M=D|M

@ENDREMAINDER
0;JMP
(REMAINDER2)
@2
D=A
@17
A=M
M=D|M

@ENDREMAINDER
0;JMP
(REMAINDER3)
@4
D=A
@17
A=M
M=D|M

@ENDREMAINDER
0;JMP
(REMAINDER4)
@8
D=A
@17
A=M
M=D|M

@ENDREMAINDER
0;JMP
(REMAINDER5)
@16
D=A
@17
A=M
M=D|M

@ENDREMAINDER
0;JMP
(REMAINDER6)
@32
D=A
@17
A=M
M=D|M

@ENDREMAINDER
0;JMP
(REMAINDER7)
@64
D=A
@17
A=M
M=D|M

@ENDREMAINDER
0;JMP
(REMAINDER8)
@128
D=A
@17
A=M
M=D|M

@ENDREMAINDER
0;JMP
(REMAINDER9)
@256
D=A
@17
A=M
M=D|M

@ENDREMAINDER
0;JMP
(REMAINDER10)
@512
D=A
@17
A=M
M=D|M

@ENDREMAINDER
0;JMP
(REMAINDER11)
@1024
D=A
@17
A=M
M=D|M

@ENDREMAINDER
0;JMP
(REMAINDER12)
@2048
D=A
@17
A=M
M=D|M

@ENDREMAINDER
0;JMP
(REMAINDER13)
@4096
D=A
@17
A=M
M=D|M

@ENDREMAINDER
0;JMP
(REMAINDER14)
@8192
D=A
@17
A=M
M=D|M

@ENDREMAINDER
0;JMP
(REMAINDER15)
@16384
D=A
@17
A=M
M=D|M

@ENDREMAINDER
0;JMP
(REMAINDER16)
@32768
D=A
@17
A=M
M=D|M

@ENDREMAINDER
0;JMP

(ENDREMAINDER)


